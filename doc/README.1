.\" DO NOT MODIFY THIS FILE: Generated by [mdp(1)](https://github.com/freeformsystems/mdp).
.TH "MDP" "1" "February 2014" "mdp 0.1.2" "User Commands"
.SH "NAME"
mdp \- Markdown partial processor
.SH "MDP(1)"
.PP
Markdown partial processor.
.PP
Designed to generate markdown documents from a series of partials. 
.PP
Read \fBPARTIAL\fR to learn how to define partials or get a quick feel by checking the \fBCONFIGURATION\fR that created this document, see \fBUSAGE\fR for an abbreviated look at the command line options.
.SH "FEATURES"
.BL
.IP "\[ci]" 4
Synchronize your \fBREADME\fR with your code.
.IP "\[ci]" 4
Generate \fBmarkdown\fR, \fBhtml\fR, \fBman\fR and \fBtxt\fR documents from partials.
.IP "\[ci]" 4
Flexible middleware design, see \fBMIDDLEWARE\fR.
.IP "\[ci]" 4
Generate a table of contents for markdown document(s).
.IP "\[ci]" 4
Concatenate multiple markdown documents into a single file.
.IP "\[ci]" 4
Include the output of a shell program, great for examples or program usage.
.IP "\[ci]" 4
Convert relative links to absolute links so your readme documents work when displayed on the npm[3] website.
.IP "\[ci]" 4
Be pedantic in presentation, but lazy authoring. Ensure paragraphs are terminated with a period and start out title case.
.EL
.SH "INSTALL"

\fBnpm i \-g mdp\fR
.SH "USAGE"

.LT
Markdown partial processor.

Usage: mdp [\-fp] [\-\-force] [\-\-print] [\-o=file] [\-h=file] file ...

Options:
 \-p, \-\-print=[format]       Print document to stdout.
     \-\-color                Control terminal color.
     \-\-log\-file=[file]      Redirect to log file.
     \-\-debug                Enable debugging.
 \-f, \-\-force                Force file overwrite.
     \-\-pandoc               Include pandoc meta data.
     \-\-inspect              Enable inspect middleware.
     \-\-log\-level=[level]    Set the log level.
 \-t, \-\-title=[title]        Document title.
 \-i, \-\-input=[file...]      Meta definition file(s).
 \-o, \-\-output=[file...]     Output file(s), may be specified once for each
                            format. The output format is determined by the file
                            extension, md, txt, html or [1\-8]. If no output
                            files are specified then README.md is generated in
                            the current directory.
 \-v, \-\-verbose              Print more information.
 \-w, \-\-middleware=[file ...]
                            Require custom middleware.
     \-\-help                 Display this help and exit.
     \-\-version              Output version information and exit.

Report bugs to muji <noop@xpm.io>.
.SH "CONFIGURATION"
.PP
This document was generated with the following configuration (see package.json[6]):

.LT
{
  "title": {
    "ref": "name",
    "format": "%s(1)"
  },
  "pedantic": true,
  "include": "doc/readme",
  "require": "lib",
  "gfm": true,
  "branch": "master",
  "links": "links.md",
  "toc": "Table of Contents",
  "order": false,
  "base": "https://github.com/freeformsystems/mdp",
  "partial": [
    {
      "ref": "description"
    },
    {
      "inc": [
        "introduction.md",
        "features.md",
        "install.md"
      ]
    },
    {
      "title": "Usage",
      "bin": "mdp \-\-help",
      "type": "code"
    },
    {
      "title": "Configuration",
      "text": "This document was generated with the following configuration (see [package.json](/package.json)):",
      "ref": "mdp",
      "stringify": true,
      "format": "```json\n%s\n```",
      "footer": "***Note this is not necessarily the optimal configuration it is designed to showcase the partial functionality.***"
    },
    {
      "inc": "meta.md"
    },
    {
      "req": "defaults.js",
      "type": "code",
      "language": "javascript"
    },
    {
      "inc": [
        "partial.md",
        "generator.md"
      ]
    },
    {
      "title": "Middleware",
      "inc": "middleware.md"
    },
    {
      "text": "The `inspect` middleware is shown below:",
      "req": "middleware/inspect.js",
      "type": "code",
      "language": "javascript"
    },
    {
      "text": "You can enable it by declaring it in the meta data (or by using `\-\-inspect`):",
      "obj": {
        "middleware": [
          "inspect"
        ]
      },
      "type": "code",
      "language": "json"
    },
    {
      "inc": [
        "library.md"
      ]
    },
    {
      "title": "Hook",
      "text": "Keep your README up to date with a git hook, this is the hook from this repository:",
      "inc": "../../.git/hooks/pre\-commit",
      "type": "code",
      "language": "bash"
    },
    {
      "text": "If you have `mdp` in your path you could use:",
      "inc": "git\-hook.sh",
      "type": "code",
      "language": "bash"
    },
    {
      "inc": [
        "license.md",
        "footer.md"
      ]
    }
  ]
}
.PP
\fBNote this is not necessarily the optimal configuration it is designed to showcase the partial functionality.\fR
.SH "META"
.PP
Meta data describes processing options and how you want to collate the partials.
.SS "Options"
.BL
.IP "\[ci]" 4
\fBgenerator\fR: A boolean that disables inclusion of the generator text.
.IP "\[ci]" 4
\fBtitle\fR: A string that sets the document title or a partial definition.
.IP "\[ci]" 4
\fBgfm\fR: A boolean that indicates that github[1] flavoured markdown is in use.
.IP "\[ci]" 4
\fBperiod\fR: The character used by the \fBPEDANTIC MIDDLEWARE\fR.
.IP "\[ci]" 4
\fBinclude\fR: A directory that is the base path for \fBINCLUDE PARTIALS\fR.
.IP "\[ci]" 4
\fBrequire\fR: A directory that is the base path for \fBREQUIRE PARTIALS\fR.
.IP "\[ci]" 4
\fBbranch\fR: A branch name to use when resolving links that begin with \fB/\fR for github[1], only applicable if \fBgfm\fR is set.
.IP "\[ci]" 4
\fBlinks\fR: The name of a links include file, resolved relative to \fBinclude\fR.
.IP "\[ci]" 4
\fBtoc\fR: Enable the table of contents middleware with \fBtrue\fR or set to a string to include a title above the table of contents.
.IP "\[ci]" 4
\fBorder\fR: A boolean that indicates the \fBtoc\fR middleware should use ordered lists.
.IP "\[ci]" 4
\fBbase\fR: Enable the absolute link middleware, specifies the base URL for absolute links.
.IP "\[ci]" 4
\fBhash\fR: A boolean that controls whether the absolute middleware operates on URLs that begin with \fB#\fR.
.IP "\[ci]" 4
\fBlevel\fR: An integer indicating the header level for \fBtitle\fR properties in partial definitions.
.IP "\[ci]" 4
\fBpartial\fR: Array of partial definitions, see \fBPARTIAL\fR.
.EL

.LT
{
  "generator": "Generated by [mdp(1)](https://github.com/freeformsystems/mdp).",
  "title": null,
  "gfm": true,
  "period": ".",
  "pedantic": false,
  "include": null,
  "require": null,
  "branch": "master",
  "links": null,
  "toc": false,
  "order": false,
  "base": null,
  "hash": false,
  "level": 2,
  "partial": null
}
.SS "Partial"
.PP
A partial may be one of:
.BL
.IP "\[ci]" 4
\fBliteral|lit\fR: A string literal.
.IP "\[ci]" 4
\fBreference|ref\fR: A property reference.
.IP "\[ci]" 4
\fBobject|obj\fR: A json or javascript object reference.
.IP "\[ci]" 4
\fBinclude|inc\fR: Include a file, normally a markdown document but not necessarily.
.IP "\[ci]" 4
\fBbinary|bin\fR: Execute a command and use \fBstdout\fR as the content.
.IP "\[ci]" 4
\fBrequire|req\fR: Require a \fB.js\fR module or a \fB.json\fR file.
.EL
.SS "Generator"
.PP
By default \fBmdp(1)\fR will append a \fIgenerator\fR message to the end of the document, it is nice if you wish to leave it in to help spread the word, however you may disable this message by setting the \fBgenerator\fR property to \fBfalse\fR.
.SH "MIDDLEWARE"
.PP
Middleware functions are executed asynchronously once for each token encountered in the markdown document.
.PP
The \fBinspect\fR middleware is shown below:

.LT
function inspect(meta) {
  if(!arguments.length) return;
  return function(token, tokens, meta, next) {
    console.dir(token);
    next();
  }
}
.PP
You can enable it by declaring it in the meta data (or by using \fB\-\-inspect\fR):

.LT
{
  "middleware": [
    "inspect"
  ]
}
.SH "LIBRARY"
.PP
Whilst designed to be used as a command line interface, in order to support ordered lists when round tripping the marked[4] tokens back to markdown it was necessary to extend the \fBParser\fR and \fBRenderer\fR classes.
.PP
These are exposed via the \fBMarkdownParser\fR and \fBMarkdownRenderer\fR properties of the module.
.SH "HOOK"
.PP
Keep your README up to date with a git hook, this is the hook from this repository:

.LT
#!/usr/bin/env bash
path=$(cd ${BASH_SOURCE[0]%/*} && echo $PWD);
path=$(dirname $(dirname ${path}));
cd ${path} && npm run build \
  && git add README.md doc/README.html doc/README.txt doc/README.1
.PP
If you have \fBmdp\fR in your path you could use:

.LT
#/bin/sh
mdp \-\-force && git add README.md
.SH "LICENSE"
.PP
Everything is MIT[7]. Read the license[8] if you feel inclined.
.PP
This program was built using the command[5] module, if you care for excellent documentation and write command line interfaces you should check it out.
.SH "LINKS"
.BL
.IP "\[ci]" 4
[1] http://github.com
.IP "\[ci]" 4
[2] http://nodejs.org
.IP "\[ci]" 4
[3] http://npmjs.org
.IP "\[ci]" 4
[4] https://github.com/chjj/marked
.IP "\[ci]" 4
[5] https://github.com/freeformsystems/cli\-command
.IP "\[ci]" 4
[6] https://github.com/freeformsystems/mdp/blob/master/package.json
.IP "\[ci]" 4
[7] http://en.wikipedia.org/wiki/MIT_License
.IP "\[ci]" 4
[8] https://github.com/freeformsystems/mdp/blob/master/LICENSE
.EL
